{"version":3,"file":"static/webpack/static/development/pages/index.js.433492cb391c7b05a522.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, {useState, useCallback, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport {groupBy, uniq, indexOf} from 'lodash'\n\nimport {getData} from '../lib/api'\n\nimport centers from '../centers.json'\n\nimport Page from '../layouts/main'\n\nimport Menu from '../components/menu'\nimport ReactMapGl from '../components/react-map-gl'\n\nimport theme from '../styles/theme'\nimport colors from '../styles/colors'\n\nimport {previousDates} from '../lib/dates'\n\nconst defaultViewport = {\n  latitude: 46.9,\n  longitude: 1.7,\n  zoom: 5\n}\n\nconst MainPage = ({data, dates}) => {\n  const [date, setDate] = useState(dates[dates.length - 1])\n  const [franceReport, setFranceReport] = useState({})\n  const [regionsReport, setRegionsReport] = useState({})\n  const [viewport, setViewport] = useState(defaultViewport)\n\n  const dateIdx = indexOf(dates, date)\n\n  const previousReport = useCallback(() => {\n    const idx = indexOf(dates, date)\n    const previousIdx = idx - 1\n\n    if (previousIdx >= 0) {\n      setDate(dates[previousIdx])\n    }\n  }, [dates, date])\n\n  const nextReport = useCallback(() => {\n    const idx = indexOf(dates, date)\n    const nextIdx = idx + 1\n    if (nextIdx <= dates.length - 1) {\n      setDate(dates[nextIdx])\n    }\n  }, [dates, date])\n\n  const getFranceReport = useCallback(() => {\n    const reports = data.filter((item => item.nom === 'France'))\n    return {\n      ...reports.find(r => r.date === date),\n      history: reports\n    }\n  }, [date, data])\n\n  const getRegionsReport = useCallback(() => {\n    const regions = data.filter((item => item.code.includes('REG')))\n    const byCode = groupBy(regions, 'code')\n\n    return {\n      type: 'FeatureCollection',\n      features: Object.keys(byCode).map(code => {\n        return {\n          type: 'Feature',\n          geometry: {\n            type: 'Point',\n            coordinates: centers[code]\n          },\n          properties: {\n            ...byCode[code].find(r => r.date === date),\n            history: byCode[code].filter(r => previousDates(date, r.date))\n          }\n        }\n      }).filter(i => Boolean(i))\n    }\n  }, [date, data])\n\n  useEffect(() => {\n    const franceReport = getFranceReport()\n    setFranceReport(franceReport)\n\n    const regionsReport = getRegionsReport()\n    setRegionsReport(regionsReport)\n  }, [date, getFranceReport, getRegionsReport])\n\n  useEffect(() => {\n    const mobileWidth = theme.mobileDisplay.split('px')[0]\n    if (window.innerWidth < mobileWidth) {\n      const {latitude, longitude} = viewport\n      setViewport({\n        latitude,\n        longitude,\n        zoom: 4.3\n      })\n    }\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Page title='Tableau de bord de suivi de l’épidémie de nouveau coronavirus'>\n      <div className='main-page-container'>\n        <div className='menu'>\n          <Menu\n            date={date}\n            report={franceReport}\n            previousReport={dateIdx > 0 ? previousReport : null}\n            nextReport={dateIdx < dates.length - 1 ? nextReport : null}\n          />\n        </div>\n        <div className='map'>\n          <ReactMapGl\n            viewport={viewport}\n            date={date}\n            regions={regionsReport}\n            onViewportChange={setViewport}\n          />\n        </div>\n      </div>\n      <style jsx>{`\n        .main-page-container {\n          position: absolute;\n          display: flex;\n          height: 100%;\n          width: 100%;\n        }\n\n        .menu {\n          flex: 1;\n          z-index: 1;\n          max-width: 400px;\n          box-shadow: 0 1px 4px ${colors.lightGrey};\n        }\n\n        .map {\n          flex:1;\n          height: 100%;\n        }\n\n        @media (max-width: ${theme.mobileDisplay}) {\n          .main-page-container {\n            flex-direction: column-reverse;\n          }\n\n          .menu {\n            flex: 0;\n            height: 40%;\n            max-width: none;\n          }\n        }\n        `}</style>\n    </Page>\n  )\n}\n\nMainPage.propTypes = {\n  data: PropTypes.array.isRequired,\n  dates: PropTypes.array.isRequired\n}\n\nMainPage.getInitialProps = async () => {\n  const data = await getData()\n\n  return {\n    data,\n    dates: uniq(data.filter(r => r.code === 'FRA').map(r => r.date)).sort()\n  }\n}\n\nexport default MainPage\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAFA;AAIA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AANA;AAWA;AAAA;AAAA;AAdA;AAgBA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AAAA;AAAA;AAAA;AAqDA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;;;;A","sourceRoot":""}