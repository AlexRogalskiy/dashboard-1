{"version":3,"file":"static/webpack/static/development/pages/index.js.902f54493d094f850e9a.hot-update.js","sources":["webpack:///./components/descritpion.js","webpack:///./components/menu.js","webpack:///./layouts/mobile.js","webpack:///./pages/index.js"],"sourcesContent":["import React from 'react'\n\nconst Description = React.memo(() => (\n  <div className='description'>\n    <p>\n      L‘information officielle sur la progression de l’épidémie en France est très fragmentée.\n    </p>\n    <p>\n      <a href='https://www.santepubliquefrance.fr'>Santé publique France</a> propose un point épidémiologique quotidien, qui comprend les chiffres-clés nationaux, et le nombre de cas confirmés par région.\n    </p>\n    <p>\n      Les agences régionales de santé et les préfectures publient de leur côté des informations au niveau départemental, ainsi que le nombre de personnes décédées ou en réanimation.\n    </p>\n    <p>\n      Cet outil contributif tente de proposer une <a href='https://www.data.gouv.fr/fr/datasets/chiffres-cles-concernant-lepidemie-de-covid19-en-france/'>vision consolidée</a> des données officielles disponibles.\n    </p>\n\n    <style jsx>{`\n      .description {\n        padding: 1em;\n      }\n      .description p {\n        font-size: 0.85em;\n      }\n    `}</style>\n  </div>\n))\n\nexport default Description\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {FileText, Map, BarChart} from 'react-feather'\n\nimport colors from '../styles/colors'\nimport theme from '../styles/theme'\n\nconst Menu = ({selectedView, selectView, children}) => {\n  return (\n    <div className='menu-container'>\n      <div className='content'>\n        {children}\n      </div>\n\n      <div className='view-selector'>\n        <div className={`${selectedView === 'description' ? 'selected' : ''}`} onClick={() => selectView('description')}>\n          <FileText />\n        </div>\n        <div className={`${selectedView === 'map' ? 'selected' : ''}`} onClick={() => selectView('map')}>\n          <Map />\n        </div>\n        <div className={`${selectedView === 'stats' ? 'selected' : ''}`} onClick={() => selectView('stats')}>\n          <BarChart />\n        </div>\n      </div>\n\n      <div className='menu-footer'>\n        <div>[<a href='https://github.com/opencovid19-fr/dashboard'>GitHub</a>]</div>\n      </div>\n      <style jsx>{`\n        .menu-container {\n          display: flex;\n          flex-direction: column;\n          height: 100%;\n          width: 100%;\n          background-color: #fff;\n        }\n\n        .menu-container .content {\n          flex: 1;\n          overflow-y: scroll;\n        }\n\n        .view-selector {\n          display: none;\n        }\n\n        .view-selector > div {\n          padding: 1em;\n          margin: auto;\n        }\n\n        .view-selector > div.selected {\n          border-top: 2px solid ${colors.blue};\n        }\n\n        .menu-container .menu-footer {\n          text-align: center;\n          background: ${colors.lightGrey};\n          padding: 1em;\n        }\n\n        @media (max-width: ${theme.mobileDisplay}) {\n          .menu-footer {\n            padding: 0.5em 1em;\n          }\n\n          .view-selector {\n            display: grid;\n            grid-template-columns: 1fr 1fr 1fr;\n            justify-content: center;\n            align-items: center;\n          }\n        }\n    `}</style>\n    </div>\n  )\n}\n\nMenu.defaultProps = {\n  selectedView: null,\n  selectView: null\n}\n\nMenu.propTypes = {\n  selectedView: PropTypes.oneOf([\n    'description', 'map', 'stats'\n  ]),\n  selectView: PropTypes.func,\n  children: PropTypes.node.isRequired\n}\n\nexport default Menu\n","import React, {useState} from 'react'\n\nimport DateNav from '../components/date-nav'\nimport Menu from '../components/menu'\nimport ReactMapGl from '../components/react-map-gl'\nimport Statistics from '../components/statistics'\nimport ConfirmedChart from '../components/confirmed-chart'\nimport Description from '../components/descritpion'\n\nconst VIEWS = {\n  map: ({viewport, date, regionsReport, setViewport}) => (\n    <ReactMapGl\n      viewport={viewport}\n      date={date}\n      regions={regionsReport}\n      onViewportChange={setViewport} />\n  ),\n  stats: ({date, franceReport}) => (\n    <>\n      <Statistics report={franceReport} />\n\n      {franceReport && franceReport.history && (\n        <ConfirmedChart data={franceReport.history.filter(r => date >= r.date)} height={300} />\n      )}\n    </>\n  ),\n  description: () => <Description />\n}\n\nconst MobilePage = props => {\n  const [selectedView, setSelectedView] = useState('map')\n\n  return (\n    <div className='mobile-page-container'>\n      <DateNav {...props} />\n      <Menu selectedView={selectedView} selectView={setSelectedView}>\n        {VIEWS[selectedView](props)}\n      </Menu>\n\n      <style jsx>{`\n        .mobile-page-container {\n          height: 100%;\n        }\n      `}</style>\n    </div>\n  )\n}\n\nexport default MobilePage\n","import React, {useState, useCallback, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport {groupBy, uniq, indexOf} from 'lodash'\n\nimport {getData} from '../lib/api'\n\nimport centers from '../centers.json'\n\nimport Page from '../layouts/main'\n\nimport Menu from '../components/menu'\nimport ReactMapGl from '../components/react-map-gl'\nimport ConfirmedChart from '../components/confirmed-chart'\nimport Statistics from '../components/statistics'\nimport Description from '../components/descritpion'\n\nimport DateNav from '../components/date-nav'\n\nimport theme from '../styles/theme'\nimport colors from '../styles/colors'\n\nimport MobilePage from '../layouts/mobile'\n\nconst defaultViewport = {\n  latitude: 46.9,\n  longitude: 1.7,\n  zoom: 5\n}\n\nconst MainPage = ({data, dates}) => {\n  const [isMobileDevice, setIsMobileDevice] = useState(false)\n  const [date, setDate] = useState(dates[dates.length - 1])\n  const [franceReport, setFranceReport] = useState({})\n  const [regionsReport, setRegionsReport] = useState({})\n  const [viewport, setViewport] = useState(defaultViewport)\n\n  const dateIdx = indexOf(dates, date)\n\n  const previousReport = useCallback(() => {\n    const idx = indexOf(dates, date)\n    const previousIdx = idx - 1\n\n    if (previousIdx >= 0) {\n      setDate(dates[previousIdx])\n    }\n  }, [dates, date])\n\n  const nextReport = useCallback(() => {\n    const idx = indexOf(dates, date)\n    const nextIdx = idx + 1\n    if (nextIdx <= dates.length - 1) {\n      setDate(dates[nextIdx])\n    }\n  }, [dates, date])\n\n  const getFranceReport = useCallback(() => {\n    const reports = data.filter((item => item.nom === 'France'))\n    return {\n      ...reports.find(r => r.date === date),\n      history: reports\n    }\n  }, [date, data])\n\n  const getRegionsReport = useCallback(() => {\n    const regions = data.filter((item => item.code.includes('REG')))\n    const byCode = groupBy(regions, 'code')\n\n    return {\n      type: 'FeatureCollection',\n      features: Object.keys(byCode).map(code => {\n        return {\n          type: 'Feature',\n          geometry: {\n            type: 'Point',\n            coordinates: centers[code]\n          },\n          properties: {\n            ...byCode[code].find(r => r.date === date),\n            history: byCode[code].filter(r => date >= r.date)\n          }\n        }\n      }).filter(i => Boolean(i))\n    }\n  }, [date, data])\n\n  const handleResize = () => {\n    const mobileWidth = theme.mobileDisplay.split('px')[0]\n    setIsMobileDevice(window.innerWidth < mobileWidth)\n  }\n\n  useEffect(() => {\n    const {latitude, longitude} = viewport\n    setViewport({\n      latitude,\n      longitude,\n      zoom: isMobileDevice ? 4.3 : 5\n    })\n  }, [isMobileDevice]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    const franceReport = getFranceReport()\n    setFranceReport(franceReport)\n\n    const regionsReport = getRegionsReport()\n    setRegionsReport(regionsReport)\n  }, [date, getFranceReport, getRegionsReport])\n\n  useEffect(() => {\n    const mobileWidth = theme.mobileDisplay.split('px')[0]\n    if (window.innerWidth < mobileWidth) {\n      setIsMobileDevice(true)\n    }\n\n    window.addEventListener('resize', handleResize)\n\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  }, [])\n\n  return (\n    <Page title='Tableau de bord de suivi de l’épidémie de nouveau coronavirus'>\n      <div className='main-page-container'>\n        {isMobileDevice ? (\n          <MobilePage\n            date={date}\n            franceReport={franceReport}\n            regionsReport={regionsReport}\n            prev={dateIdx > 0 ? previousReport : null}\n            next={dateIdx < dates.length - 1 ? nextReport : null}\n            setViewport={setViewport}\n            viewport={viewport}\n          />\n        ) : (\n          <>\n            <div className='menu'>\n              <Menu\n                date={date}\n                previousReport={dateIdx > 0 ? previousReport : null}\n                nextReport={dateIdx < dates.length - 1 ? nextReport : null}\n              >\n                <DateNav date={date} prev={previousReport} next={nextReport} />\n                <>\n                  <Description />\n\n                  <Statistics report={franceReport} />\n\n                  {franceReport && franceReport.history && (\n                    <ConfirmedChart data={franceReport.history.filter(r => date >= r.date)} height={300} />\n                  )}\n                </>\n              </Menu>\n            </div>\n\n            <div className='map'>\n              <ReactMapGl\n                viewport={viewport}\n                date={date}\n                regions={regionsReport}\n                onViewportChange={setViewport}\n              />\n            </div>\n          </>\n        )}\n\n        <style jsx>{`\n                        .menu {\n                flex: 1;\n                z-index: 1;\n                max-width: 400px;\n                box-shadow: 0 1px 4px ${colors.lightGrey};\n              }\n\n              .map {\n                flex:1;\n                height: 100%;\n              }\n\n              @media (max-width: ${theme.mobileDisplay}) {\n                .map {\n                  height: 60%;\n                }\n\n                .menu {\n                  flex: 0;\n                  height: 40%;\n                  max-width: none;\n                  box-shadow: 0 -1px 4px ${colors.lightGrey};\n                }\n              }\n\n\n          .main-page-container {\n            position: absolute;\n            display: flex;\n            height: 100%;\n            width: 100%;\n          }\n\n          @media (max-width: ${theme.mobileDisplay}) {\n            .main-page-container {\n              flex-direction: column-reverse;\n            }\n          }\n        `}</style>\n      </div>\n    </Page>\n  )\n}\n\nMainPage.propTypes = {\n  data: PropTypes.array.isRequired,\n  dates: PropTypes.array.isRequired\n}\n\nMainPage.getInitialProps = async () => {\n  const data = await getData()\n\n  return {\n    data,\n    dates: uniq(data.filter(r => r.code === 'FRA').map(r => r.date)).sort()\n  }\n}\n\nexport default MainPage\n"],"mappings":"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","sourceRoot":""}