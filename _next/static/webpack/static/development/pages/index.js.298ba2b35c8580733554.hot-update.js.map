{"version":3,"file":"static/webpack/static/development/pages/index.js.298ba2b35c8580733554.hot-update.js","sources":["webpack:///./components/react-map-gl/index.js"],"sourcesContent":["import React, {useState, useCallback} from 'react'\nimport PropTypes from 'prop-types'\nimport ReactMapGL, {Source, Layer, Popup} from 'react-map-gl'\n\nimport RegionSumup from './region-sumup'\n\nimport {regionLayer, regionCountLayer} from './layers'\n\nconst settings = {\n  maxZoom: 16\n}\n\nconst Map = ({viewport, regions, onViewportChange}) => {\n  const [map, setMap] = useState()\n  const [hovered, setHovered] = useState(null)\n\n  const mapRef = useCallback(ref => {\n    if (ref) {\n      setMap(ref.getMap())\n    }\n  }, [])\n\n  const onHover = event => {\n    event.stopPropagation()\n    const feature = event.features && event.features[0]\n    const [longitude, latitude] = event.lngLat\n    let hoverInfo\n\n    if (feature) {\n      hoverInfo = {\n        longitude,\n        latitude,\n        feature\n      }\n    }\n\n    setHovered(hoverInfo)\n  }\n\n  return (\n    <div className='map-container'>\n      <ReactMapGL\n        ReuseMaps\n        ref={mapRef}\n        {...viewport}\n        width='100%'\n        height='100%'\n        mapStyle='https://openmaptiles.geo.data.gouv.fr/styles/osm-bright/style.json'\n        {...settings}\n        interactiveLayerIds={[regionLayer.id]}\n        onViewportChange={onViewportChange}\n        onHover={onHover}\n      >\n\n        <Source type='geojson' id='regions' data={regions}>\n          <Layer {...regionLayer} />\n          <Layer {...regionCountLayer} />\n        </Source>\n\n        {hovered && (\n          <Popup\n            longitude={hovered.longitude}\n            latitude={hovered.latitude}\n            closeButton={false}\n            closeOnClick={false}\n            onClose={() => setHovered(null)}\n            anchor='top'\n            offsetTop={20}\n          >\n            <RegionSumup {...hovered.feature.properties} />\n          </Popup>\n        )}\n      </ReactMapGL>\n      <style jsx>{`\n        .map-container {\n          position: relative;\n          width: 100%;\n          height: 100%;\n        }\n      `}</style>\n    </div>\n  )\n}\n\nMap.propTypes = {\n  viewport: PropTypes.object.isRequired,\n  date: PropTypes.string.isRequired,\n  regions: PropTypes.object.isRequired,\n  onViewportChange: PropTypes.func.isRequired\n}\n\nexport default Map\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAIA;AACA;AACA;AANA;AAQA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AA7BA;AAAA;AAAA;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;A","sourceRoot":""}