{"version":3,"file":"static/webpack/static/development/pages/index.js.858e1587e9fb9e3df647.hot-update.js","sources":["webpack:///./components/description.js","webpack:///./layouts/mobile.js","webpack:///./layouts/screen.js"],"sourcesContent":["import React from 'react'\n\nconst Description = React.memo(() => (\n  <div className='description'>\n    <p>\n      L‘information officielle sur la progression de l’épidémie en France est très fragmentée.\n    </p>\n    <p>\n      <a href='https://www.santepubliquefrance.fr'>Santé publique France</a> propose un point épidémiologique quotidien, qui comprend les chiffres-clés nationaux, et le nombre de cas confirmés par région.\n    </p>\n    <p>\n      Les agences régionales de santé et les préfectures publient de leur côté des informations au niveau départemental, ainsi que le nombre de personnes décédées ou en réanimation.\n    </p>\n    <p>\n      Cet outil contributif tente de proposer une <a href='https://www.data.gouv.fr/fr/datasets/chiffres-cles-concernant-lepidemie-de-covid19-en-france/'>vision consolidée</a> des données officielles disponibles.\n    </p>\n\n    <style jsx>{`\n      .description {\n        padding: 1em;\n      }\n\n      .description p {\n        font-size: 0.85em;\n      }\n    `}</style>\n  </div>\n))\n\nexport default Description\n","import React, {useState} from 'react'\nimport {FileText, Map, BarChart} from 'react-feather'\n\nimport colors from '../styles/colors'\nimport theme from '../styles/theme'\n\nimport DateNav from '../components/date-nav'\nimport Scrollable from '../components/scrollable'\nimport ReactMapGl from '../components/react-map-gl'\nimport Statistics from '../components/statistics'\nimport ConfirmedChart from '../components/confirmed-chart'\nimport Description from '../components/description'\nimport Footer from '../components/footer'\n\nconst VIEWS = {\n  map: ({viewport, date, regionsReport, setViewport}) => (\n    <ReactMapGl\n      viewport={viewport}\n      date={date}\n      regions={regionsReport}\n      onViewportChange={setViewport} />\n  ),\n  stats: ({date, franceReport}) => (\n    <>\n      <Statistics report={franceReport} />\n\n      {franceReport && franceReport.history && (\n        <ConfirmedChart data={franceReport.history.filter(r => date >= r.date)} height={300} />\n      )}\n    </>\n  ),\n  description: () => <Description />\n}\n\nconst MobilePage = props => {\n  const [selectedView, setSelectedView] = useState('map')\n\n  return (\n    <div className='mobile-page-container'>\n      <DateNav {...props} />\n      <Scrollable>\n        {VIEWS[selectedView](props)}\n      </Scrollable>\n\n      <div className='view-selector'>\n        <div className={`${selectedView === 'description' ? 'selected' : ''}`} onClick={() => setSelectedView('description')}>\n          <FileText />\n        </div>\n        <div className={`${selectedView === 'map' ? 'selected' : ''}`} onClick={() => setSelectedView('map')}>\n          <Map />\n        </div>\n        <div className={`${selectedView === 'stats' ? 'selected' : ''}`} onClick={() => setSelectedView('stats')}>\n          <BarChart />\n        </div>\n      </div>\n\n      <Footer />\n\n      <style jsx>{`\n        .mobile-page-container {\n          display: flex;\n          flex-direction: column;\n          flex: 1;\n        }\n\n        .view-selector {\n          display: none;\n        }\n\n        .view-selector > div {\n          padding: 0.5em;\n          margin: auto;\n        }\n\n        .view-selector > div.selected {\n          border-top: 2px solid ${colors.blue};\n        }\n\n        @media (max-width: ${theme.mobileDisplay}) {\n          .view-selector {\n            display: grid;\n            grid-template-columns: 1fr 1fr 1fr;\n            justify-content: center;\n            align-items: center;\n            background-color: #fff;\n          }\n        }\n      `}</style>\n    </div>\n  )\n}\n\nexport default MobilePage\n","import React from 'react'\n\nimport DateNav from '../components/date-nav'\nimport Scrollable from '../components/scrollable'\nimport ReactMapGl from '../components/react-map-gl'\nimport Statistics from '../components/statistics'\nimport ConfirmedChart from '../components/confirmed-chart'\nimport Description from '../components/description'\nimport Footer from '../components/footer'\n\nimport colors from '../styles/colors'\n\nconst ScreenPage = ({date, franceReport, regionsReport, prev, next, viewport, setViewport}) => {\n  return (\n    <>\n      <div className='menu'>\n        <DateNav date={date} prev={prev} next={next} />\n        <Scrollable date={date}>\n          <>\n            <Description />\n\n            <Statistics report={franceReport} />\n\n            {franceReport && franceReport.history && (\n              <ConfirmedChart data={franceReport.history.filter(r => date >= r.date)} height={300} />\n            )}\n          </>\n        </Scrollable>\n        <Footer />\n      </div>\n\n      <div className='map'>\n        <ReactMapGl\n          viewport={viewport}\n          date={date}\n          regions={regionsReport}\n          onViewportChange={setViewport}\n        />\n      </div>\n\n      <style jsx>{`\n          .menu {\n            z-index: 1;\n            display: flex;\n            flex-direction: column;\n            max-width: 400px;\n            box-shadow: 0 1px 4px ${colors.lightGrey};\n          }\n\n          .map {\n            flex: 1;\n            height: 100%;\n          }\n      `}</style>\n    </>\n  )\n}\n\nexport default ScreenPage\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AAAA;AAAA;AADA;AA2BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBA;AACA;AAmBA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBA;AAAA;AAAA;AAAA;AAoDA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5FA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBA;AAAA;AAAA;AAAA;AA0CA;AACA;AACA;;;;A","sourceRoot":""}